package discordhx.guild;

import discordhx.channel.GuildChannel;
import discordhx.role.Role;
import discordhx.emoji.Emoji;
import discordhx.channel.VoiceChannel;
import discordhx.channel.TextChannel;
import discordhx.webhook.Webhook;
import discordhx.presence.Presence;
import discordhx.user.User;
import discordhx.client.Client;
import haxe.extern.EitherType;
import js.Promise;
import discordhx.user.UserResolvable;
import discordhx.voice.VoiceConnection;

extern class Guild {
    public var afkChannelID: String;
    public var afkTimeout: Float;
    public var applicationID: String;
    public var available: Bool;
    public var channels: Collection<String, GuildChannel>;
    public var client: Client;
    public var createdAt: Date;
    public var createdTimestamp: Float;
    public var defaultChannel: GuildChannel;
    public var embedEnabled: Bool;
    public var emojis: Collection<String, Emoji>;
    public var features: Array<Dynamic>;
    public var icon: String;
    public var iconURL: String;
    public var id: String;
    public var joinedAt: Date;
    public var joinedTimestamp: Float;
    public var large: Bool;
    public var memberCount: Float;
    public var members: Collection<String, GuildMember>;
    public var name: String;
    public var owner: GuildMember;
    public var ownerID: String;
    public var presences: Collection<String, Presence>;
    public var region: String;
    public var roles: Collection<String, Role>;
    public var splash: String;
    public var splashURL: String;
    public var verificationLevel: Float;
    public var voiceConnection: VoiceConnection;

    public function ban(user: UserResolvable, deleteDays: Float): Promise<EitherType<GuildMember, EitherType<User, String>>>;
    public function createChannel(name: String, type: String): Promise<EitherType<TextChannel, VoiceChannel>>;
    public function createEmoji(attachement: BufferResolvable, name: String): Promise<Emoji>;
    public function createRole(?data: Dynamic): Promise<Role>;
    public function delete(): Promise<Guild>;
    public function deleteEmoji(emoji: EitherType<Emoji, String>): Promise<Void>;
    public function edit(data: Dynamic): Promise<Guild>;
    public function equals(guild: Guild): Bool;
    public function fetchBans(): Promise<Collection<String, User>>;
    public function fetchInvites(): Promise<Collection<String, User>>;
    public function fetchMember(user: UserResolvable): Promise<GuildMember>;
    public function fetchMembers(?query: String): Promise<Guild>;
    public function fetchWebhooks(): Collection<String, Webhook>;
    public function leave(): Promise<Guild>;
    public function member(user: UserResolvable): GuildMember;
    public function pruneMembers(days: Float, dry: Bool): Promise<Float>;
    public function setAFKChannel(afkChannel: GuildChannel): Promise<Guild>;
    public function setAFKTimeout(afkTimeout: Float): Promise<Guild>;
    public function setIcon(icon: Base64Resolvable): Promise<Guild>;
    public function setName(name: String): Promise<Guild>;
    public function setOwner(owner: GuildMemberResolvable): Promise<Guild>;
    public function setRegion(region: String): Promise<Guild>;
    public function setRolePosition(role: EitherType<String, Role>, position: Float): Promise<Guild>;
    public function setSplash(splash: Base64Resolvable): Promise<Guild>;
    public function setVerificationLevel(verificationLevel: Int): Promise<Guild>;
    public function sync(): Void;
    public function toString(): String;
    public function unban(user: UserResolvable): Promise<User>;
}
